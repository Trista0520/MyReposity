<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="userService" class="com.trista.service.UserServiceImpl"></bean>
    <bean id="log" class="com.trista.log.Log"></bean>
    <bean id="afterLog" class="com.trista.log.AfterLog"></bean>

    <!--方式一：使用原生Spring API接口-->
    <!--配置aop，需要导入aop约束-->
    <!--<aop:config>
        &lt;!&ndash;切入点： expression：表达式， execution（要执行的位置）&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.trista.service.UserServiceImpl.*(..))"/>

        &lt;!&ndash;执行环绕增加&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>-->

    <!--方式二：使用自定义类-->
   <!-- <bean id="diy" class="com.trista.diy.DiyPointCut"/>

    <aop:config>
        &lt;!&ndash;自定义切面 ref：要引用的类&ndash;&gt;
        <aop:aspect ref="diy">
            &lt;!&ndash; 切入点 &ndash;&gt;
            <aop:pointcut id="pointcut" expression="execution(* com.trista.service.UserServiceImpl.*(..))"/>

            &lt;!&ndash; 通知 &ndash;&gt;
            <aop:before method="before" pointcut-ref="pointcut"/>
            <aop:after method="after" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>-->

    <!--方式三：使用注解实现AOP-->
    <bean id="annotationPointCut" class="com.trista.diy.AnnotationPointCut"/>
    <!--开启注解支持-->
    <aop:aspectj-autoproxy/>


</beans>